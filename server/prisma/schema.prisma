// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Crear nodelo usuario
//nombre, apellido, contraseña, correo, activo, avatar, role, direccion

// Crear modelo direccion
//

model user{
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  name            String 
  lastName        String
  identification  String  @unique
  password        String
  email           String  @unique
  isActive        Boolean ? @default(false)
  avatar          String ?
  role            String ? @default("user")
  address         address ?
  trucks          truck[]
}

model address{
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  department   String
  municipality String
  nomenclature String 
  user         user?  @relation(fields: [userId], references: [id])
  userId       String @unique @db.ObjectId
}

model truck {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  licensePlate  String   @unique
  brand         String
  model         String
  year          String
  mileage       Int
  capacity      Int
  actualStatus  String?   @default("En operación")
  tires         tire[]
  trips         trip[]
  fuel          fuel[]
  maintenances  maintenance[]
  user         user?  @relation(fields: [userId], references: [id])
  userId       String @unique @db.ObjectId
}

model tire {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  brand       String
  model       String
  wear        Float
  truck       truck     @relation(fields: [truckId], references: [id])
  truckId     String    @db.ObjectId
}

model trip {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  route       String
  distance    Float
  time        Float
  truck       truck      @relation(fields: [truckId], references: [id])
  truckId     String     @db.ObjectId
}

model fuel {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  quantity    Float
  cost        Float
  efficiency  Float
  truck       truck     @relation(fields: [truckId], references: [id])
  truckId     String    @db.ObjectId
}

model maintenance {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  type        String
  date        DateTime
  cost        Float
  truck       truck     @relation(fields: [truckId], references: [id])
  truckId     String    @db.ObjectId
}

